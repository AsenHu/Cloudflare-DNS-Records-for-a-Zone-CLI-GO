name: build

permissions:
  contents: write

on:
  push:
  workflow_dispatch:

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      sha: ${{steps.get_sha.outputs.sha}}
    steps:
      - id: get_sha
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          sha=$(curl -L https://api.github.com/repos/AsenHu/Cloudflare-DNS-Records-for-a-Zone-CLI-GO/commits/main | jq -r '.sha')
          echo "sha=${sha:0:7}" >> $GITHUB_OUTPUT
          gh release create "${sha:0:7}" \
            --repo="${{github.repository}}" \
            --title="${sha:0:7}" \
            --generate-notes

  build:
    strategy:
      matrix:
        include:
          - name: cf-cli-linux-amd64-v1
            goos: linux
            goarch: amd64
            goamd64: v1

          - name: cf-cli-linux-amd64-v2
            goos: linux
            goarch: amd64
            goamd64: v2

          - name: cf-cli-linux-amd64-v3
            goos: linux
            goarch: amd64
            goamd64: v3

          - name: cf-cli-linux-amd64-v4
            goos: linux
            goarch: amd64
            goamd64: v4
    env:
      GOOS: ${{matrix.goos}}
      GOARCH: ${{matrix.goarch}}
      GOAMD64: ${{matrix.goamd64}}
      CGO_ENABLED: 0
    runs-on: ubuntu-latest
    needs: prepare
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: 'stable'
      - name: build
        run : |
          go build -o "${{matrix.name}}"
          xz -9v "${{matrix.name}}"
      - name: upload
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload "${{needs.prepare.outputs.sha}}" "${{matrix.name}}.xz" \
            --clobber \
            --repo="${{github.repository}}"
